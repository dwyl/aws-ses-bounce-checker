{
  "name": "hapi-postgres-connection",
  "version": "6.1.0",
  "description": "A connection (pool) to PostgreSQL available anywhere in your hapi application",
  "main": "index.js",
  "scripts": {
    "start": "PORT=8000 node test/server_example.js",
    "create": "node test/_create_test_db.js",
    "fast": "./node_modules/tape/bin/tape ./test/*.js",
    "perf": "node test/perf.test.js",
    "test": "npm run create && ./node_modules/.bin/istanbul cover ./node_modules/tape/bin/tape ./test/connection_error.test.js  | node_modules/tap-spec/bin/cmd.js && npm run perf"
  },
  "dependencies": {
    "pg": "^6.0.1"
  },
  "devDependencies": {
    "decache": "^4.0.0",
    "hapi": "^14.2.0",
    "istanbul": "^0.4.4",
    "pg-escape": "^0.2.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dwyl/hapi-postgres-connection.git"
  },
  "keywords": [
    "hapi",
    "hapi.js",
    "hapijs",
    "pg",
    "postgres",
    "postgresql",
    "connection",
    "connect",
    "sql",
    "plugin",
    "tested"
  ],
  "author": {
    "name": "dwyl & friends"
  },
  "license": "GPL-2.0",
  "bugs": {
    "url": "https://github.com/dwyl/hapi-postgres-connection/issues"
  },
  "homepage": "https://github.com/dwyl/hapi-postgres-connection#readme",
  "readme": "# Hapi Postgres Connection\n\n![hapi-postgres-connection](https://cloud.githubusercontent.com/assets/194400/13723469/73b5d8f2-e85e-11e5-82dc-943e7ebccdce.png)\n\nCreates a PostgreSQL Connection (Pool) available anywhere in your Hapi application.\n\n[![Build Status](https://travis-ci.org/dwyl/hapi-postgres-connection.svg?branch=master)](https://travis-ci.org/dwyl/hapi-postgres-connection)\n[![codecov.io](https://codecov.io/github/dwyl/hapi-postgres-connection/coverage.svg?branch=master)](https://codecov.io/github/dwyl/hapi-postgres-connection?branch=master)\n[![Code Climate](https://codeclimate.com/github/dwyl/hapi-postgres-connection/badges/gpa.svg)](https://codeclimate.com/github/dwyl/hapi-postgres-connection)\n[![devDependency Status](https://david-dm.org/dwyl/hapi-postgres-connection/dev-status.svg)](https://david-dm.org/dwyl/hapi-postgres-connection#info=devDependencies)\n[![Dependency Status](https://david-dm.org/dwyl/hapi-postgres-connection.svg)](https://david-dm.org/dwyl/hapi-postgres-connection)\n[![npm](https://img.shields.io/npm/v/hapi-postgres-connection.svg)](https://www.npmjs.com/package/hapi-postgres-connection)\n[![Join the chat at https://gitter.im/dwyl/chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/dwyl/chat?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\n## *Why*?\n\nYou are building a PostgreSQL-backed Hapi.js Application\nbut don't want to be initialising a connection to Postgres\nin your route handler because it's *slow* and can lead\nto [*interesting* errors](https://github.com/brianc/node-postgres/issues/725) ...\nso instead, you spend 1 minute to include a *tiny, tried & tested* plugin\nthat makes Postgres available in all your route handlers.\n\n> Got *any questions*? *ask*!! https://github.com/dwyl/hapi-postgres-connection/issues\n\n## *What*?\n\nThis Hapi Plugin creates a Connection (Pool) to PostgreSQL when your\nserver starts up and makes it available *anywhere* in your app's\nroute handlers via `request.pg.client`.\n\nWhen you shut down your server (*e.g. the `server.stop` in your tests*)\nthe connection pool is closed for you.\n\n### *One Dependency*: `node-postgres` *always up-to-date*\n\nThis plugin uses https://github.com/brianc/node-postgres\nthe *most popular* (*actively maintained*) node PostgreSQL Client.\n\n## *How*?\n\n\n\n### 1. *Download/Install* from NPM\n\n```sh\nnpm install hapi-postgres-connection --save\n```\n\n### 2. *Intialise* the plugin in your Hapi Server\n\nin your server:\n```js\nserver.register({ // register all your plugins\n  register: require('hapi-postgres-connection') // no options required\n}, function (err) {\n  if (err) {\n    // handle plugin startup error\n  }\n});\n```\nNow *all* your route handlers have access to Postgres\nvia: `request.pg.client`\n\nYou also can also access Postgres through the `getCon` method on the \nHapi Postgres Connection module:\n `var pg = require('hapi-postgres-connection').getCon()`\n \nThis method may be useful when do not have access to the request\nobject.\n\n### 3. Using Postgres Client in your Route Handler\n\n```js\nserver.route({\n  method: 'GET',\n  path: '/',\n  handler: function(request, reply) {\n    var email = 'test@test.net';\n    var select = escape('SELECT * FROM people WHERE (email = %L)', email);\n    request.pg.client.query(select, function(err, result) {\n      console.log(err, result);\n      return reply(result.rows[0]);\n    })\n  }\n});\n```\n\n### *Required/Expected* Environment Variable: `DATABASE_URL`\n\nThe plugin *expects* (*requires*) that you have an Environment Variable set\nfor the Postgres Connection URL: `DATABASE_URL` in the format:\n`postgres://username:password@localhost/database`\n\nThis is the default used by [*Heroku*](https://www.heroku.com/postgres)\nso we figured it made sense to keep it.\n\n> If you are unsure how to set the Environment Variable\nor why this is a *good idea*  \n(*hard-coding values in your app is a really bad idea...*)  \nplease see: https://github.com/dwyl/learn-environment-variables\n\n## *Q*: Don't We need to Close the Postgres Connection?\n\n***A***: No! The plugin handles closing the connection pool for you!\n\n\n## *Implementation Detail*\n\nTo run the tests *locally* you will need to have\na running instance of PostgreSQL with a database called `test` available.\n\nThen set your `DATABASE_URL` Environment Variable, on my localhost its:\n```sh\nexport DATABASE_URL=postgres://postgres:@localhost/test\n```\n(*the default `postgres` user does not have a password on localhost*)\n\n\n<br />\n\n## *Motivation?*\n\nWe were doing postgres connections the *hard* way in our app(s) ...\nWe knew there had to be a *better* way\nAfter a few hours of [googling and code-reviewing](https://github.com/dwyl/hapi-login-example-postgres/issues/6)\nwe decided to write our own little plugin to simplify things.\n",
  "readmeFilename": "README.md",
  "gitHead": "353f201efc0feaaa1940221b0e705e5f37652ae5",
  "_id": "hapi-postgres-connection@6.1.0",
  "_shasum": "e3f602b57f188e398aaf6257f80c54dfbbd9265f",
  "_from": "hapi-postgres-connection@latest"
}
